[{"/Users/delphine/Documents/Sandbox/McHacks/CaringToDo/caring-todos/client/src/index.tsx":"1","/Users/delphine/Documents/Sandbox/McHacks/CaringToDo/caring-todos/client/src/reportWebVitals.ts":"2","/Users/delphine/Documents/Sandbox/McHacks/CaringToDo/caring-todos/client/src/App.tsx":"3","/Users/delphine/Documents/Sandbox/McHacks/CaringToDo/caring-todos/client/src/Login.tsx":"4","/Users/delphine/Documents/Sandbox/McHacks/CaringToDo/caring-todos/client/src/Dashboard.tsx":"5"},{"size":591,"mtime":1612022290031,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1611971285103,"results":"8","hashOfConfig":"7"},{"size":564,"mtime":1612022331621,"results":"9","hashOfConfig":"7"},{"size":1140,"mtime":1612026846079,"results":"10","hashOfConfig":"7"},{"size":4708,"mtime":1612031980281,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"hcwa6w",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/delphine/Documents/Sandbox/McHacks/CaringToDo/caring-todos/client/src/index.tsx",[],["24","25"],"/Users/delphine/Documents/Sandbox/McHacks/CaringToDo/caring-todos/client/src/reportWebVitals.ts",[],"/Users/delphine/Documents/Sandbox/McHacks/CaringToDo/caring-todos/client/src/App.tsx",["26"],"import React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Login from './Login';\nimport Dashboard from './Dashboard';\n\nconst App = () => {\n    // Logged in user info\n    const [email, setEmail] = useState('');\n\n    const handleLogin = (email: string) => {\n        setEmail(email);\n    }\n\n    return (\n        <Switch>\n            <Route path=\"/dashboard\" component={Dashboard}/>\n            <Route path=\"/\">\n                <Login onLogin={handleLogin}/>\n            </Route>\n        </Switch>\n    );\n}\n\nexport default App;\n","/Users/delphine/Documents/Sandbox/McHacks/CaringToDo/caring-todos/client/src/Login.tsx",[],"/Users/delphine/Documents/Sandbox/McHacks/CaringToDo/caring-todos/client/src/Dashboard.tsx",["27"],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":9,"column":12,"nodeType":"34","messageId":"35","endLine":9,"endColumn":17},{"ruleId":"36","severity":1,"message":"37","line":36,"column":8,"nodeType":"38","endLine":36,"endColumn":10,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"@typescript-eslint/no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'randomIndex'. Either include it or remove the dependency array.","ArrayExpression",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [randomIndex]",{"range":"45","text":"46"},[1011,1013],"[randomIndex]"]
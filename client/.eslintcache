[{"/Users/mariasolano/git/happy-todos/client/src/index.tsx":"1","/Users/mariasolano/git/happy-todos/client/src/reportWebVitals.ts":"2","/Users/mariasolano/git/happy-todos/client/src/App.tsx":"3","/Users/mariasolano/git/happy-todos/client/src/Login.tsx":"4","/Users/mariasolano/git/happy-todos/client/src/Dashboard.tsx":"5"},{"size":591,"mtime":1612021972878,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1611969862073,"results":"8","hashOfConfig":"7"},{"size":596,"mtime":1612022360115,"results":"9","hashOfConfig":"7"},{"size":1350,"mtime":1612025438121,"results":"10","hashOfConfig":"7"},{"size":3335,"mtime":1612021448915,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"uoyydv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/mariasolano/git/happy-todos/client/src/index.tsx",[],["24","25"],"/Users/mariasolano/git/happy-todos/client/src/reportWebVitals.ts",[],"/Users/mariasolano/git/happy-todos/client/src/App.tsx",["26"],"/Users/mariasolano/git/happy-todos/client/src/Login.tsx",["27","28","29"],"/Users/mariasolano/git/happy-todos/client/src/Dashboard.tsx",["30","31"],"import React, { useState } from 'react';\nimport './styles/Titles.css'\nimport './styles/Boxes.css'\nimport './styles/Buttons.css'\nimport './styles/Tabs.css'\n\nconst Dashboard = () => {\n    // Fields for creating todo\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [value, handleChange] = useState('');\n\n    const handleTodoSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n\n        console.log(title, description, category);\n        // Maria sends todo info to server\n    }\n\n    return (\n        <div className=\"App\">\n          <div className=\"MainBox\">\n            <h1 className=\"MainTitle\">Work/Life Balance Inducing To-Do List</h1>\n            <div className=\"Box\">\n                <h3 className=\"SubTitle\">Create a New Task</h3>\n                <form onSubmit={handleTodoSubmit}>\n                    <label htmlFor=\"todoTitle\" className=\"Paragraph\">Title: </label>\n                    <input className=\"TextBox\"\n                    id=\"todoTitle\"\n                    type=\"text\" \n                    name=\"title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}/>\n                    <label htmlFor=\"todoDescription\" className=\"Paragraph\">\n                        Description: \n                    </label>\n                    <input className=\"TextBox\"\n                    id=\"todoDescription\"\n                    type=\"text\" \n                    name=\"description\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}/>\n                    <select className=\"TextBox\"\n                    name=\"category\"\n                    value={category}\n                    onChange={e => setCategory(e.target.value)}>\n                        <option value=\"WORK\">Work</option>\n                        <option value=\"SCHOOL\">School</option>\n                        <option value=\"FAM-FRIENDS\">Family and Friends</option>\n                        <option value=\"SELF-CARE\">Self-care</option>\n                    </select>\n                    <button type=\"submit\" className=\"Button\">\n                        Submit\n                    </button>\n                </form>\n            </div>\n            <div className=\"Box\">\n                <h3 className=\"SubTitle\">My To-Do List</h3>\n                <div className=\"tab\">\n                  <button className=\"tablinks\" >Work</button>\n                  <button className=\"tablinks\" >School</button>\n                  <button className=\"tablinks\" >Family and Friends</button>\n                  <button className=\"tablinks\" >Self-care</button>\n                </div>\n                <div id=\"London\" className=\"tabcontent\">\n                  <h3>London</h3>\n                  <p>London is the capital city of England.</p>\n                </div>\n\n                <div id=\"Paris\" className=\"tabcontent\">\n                  <h3>Paris</h3>\n                  <p>Paris is the capital of France.</p> \n                </div>\n\n                <div id=\"Tokyo\" className=\"tabcontent\">\n                  <h3>Tokyo</h3>\n                  <p>Tokyo is the capital of Japan.</p>\n                </div>\n                </div>\n        </div>\n        </div>\n  );\n}\n\nexport default Dashboard;\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":9,"column":12,"nodeType":"38","messageId":"39","endLine":9,"endColumn":17},{"ruleId":"36","severity":1,"message":"40","line":3,"column":15,"nodeType":"38","messageId":"39","endLine":3,"endColumn":26},{"ruleId":"36","severity":1,"message":"41","line":10,"column":7,"nodeType":"38","messageId":"39","endLine":10,"endColumn":17},{"ruleId":"36","severity":1,"message":"42","line":23,"column":11,"nodeType":"38","messageId":"39","endLine":23,"endColumn":18},{"ruleId":"36","severity":1,"message":"43","line":12,"column":12,"nodeType":"38","messageId":"39","endLine":12,"endColumn":17},{"ruleId":"36","severity":1,"message":"44","line":12,"column":19,"nodeType":"38","messageId":"39","endLine":12,"endColumn":31},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"@typescript-eslint/no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar","'useMutation' is defined but never used.","'LOGIN_USER' is assigned a value but never used.","'history' is assigned a value but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]